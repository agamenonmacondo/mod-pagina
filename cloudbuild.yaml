# ✅ CONFIGURACIÓN OPTIMIZADA PARA AVA - CORREGIDA
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'
  
# ✅ VARIABLES DE SUSTITUCIÓN
substitutions:
  _SERVICE_NAME: 'ava-assistant'
  _REGION: 'us-central1'
  _MEMORY: '2Gi'
  _CPU: '2'
  _TIMEOUT: '3600s'
  _MAX_INSTANCES: '10'
  _MIN_INSTANCES: '0'
  _CONCURRENCY: '80'

steps:
  # ✅ PASO 1: BUILD CON MEJOR MANEJO DE ERRORES Y CACHE
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--build-arg', 'BUILDKIT_INLINE_CACHE=1',
      '--cache-from', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest',
      '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest',
      '.'
    ]
    timeout: '1200s'

  # ✅ PASO 2: PUSH DE LAS IMÁGENES
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$BUILD_ID']
    
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest']

  # ✅ PASO 3: DEPLOY A CLOUD RUN CON CONFIGURACIÓN COMPLETA
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', '${_SERVICE_NAME}',
      '--image', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$BUILD_ID',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '${_MEMORY}',
      '--cpu', '${_CPU}',
      '--min-instances', '${_MIN_INSTANCES}',
      '--max-instances', '${_MAX_INSTANCES}',
      '--timeout', '${_TIMEOUT}',
      '--concurrency', '${_CONCURRENCY}',
      '--set-env-vars',
      'PYTHONPATH=/app:/app/llmpagina:/app/llmpagina/ava_bot,PORT=8080,MEMORY_PATH=/data,PYTHONUNBUFFERED=1,PYTHONDONTWRITEBYTECODE=1,CLOUD_ENV=production'
    ]

  # ✅ PASO 4: VERIFICAR DEPLOYMENT
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'services', 'describe', '${_SERVICE_NAME}',
      '--region', '${_REGION}',
      '--format', 'get(status.url)'
    ]

# ✅ TIMEOUT EXTENDIDO PARA BUILD COMPLETO
timeout: '1800s'

# ✅ IMÁGENES A ALMACENAR EN REGISTRY
images:
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest'

# ✅ ARTEFACTOS PARA TRACKING
artifacts:
  images:
    - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$BUILD_ID'
    - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest'