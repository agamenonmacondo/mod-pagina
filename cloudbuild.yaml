# ✅ CONFIGURACIÓN PARA APP.PY FLASK EXISTENTE
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'

# ✅ VARIABLES DE SUSTITUCIÓN
substitutions:
  _SERVICE_NAME: 'ava-app'
  _REGION: 'us-central1'
  _MEMORY: '4Gi'
  _CPU: '2'
  _TIMEOUT: '3600s'
  _MAX_INSTANCES: '10'
  _MIN_INSTANCES: '1'

steps:
  # Paso 1: Construir la imagen Docker
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/ava-app:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/ava-app:latest',
      '.'
    ]
    dir: '.'

  # Paso 2: Empujar la imagen al registro
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/ava-app:$BUILD_ID']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/ava-app:latest']

  # Paso 3: Desplegar a Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'ava-app',
      '--image', 'gcr.io/$PROJECT_ID/ava-app:$BUILD_ID',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '2Gi',
      '--cpu', '1',
      '--max-instances', '10',
      '--set-env-vars', 
      'PYTHONPATH=/app,PORT=8080,MEMORY_PATH=/data,PYTHONUNBUFFERED=1'
    ]

# Configurar timeout más largo para permitir construcción completa
timeout: '1200s'

# Especificar qué imágenes se almacenan en el registro
images:
  - 'gcr.io/$PROJECT_ID/ava-app:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/ava-app:latest'