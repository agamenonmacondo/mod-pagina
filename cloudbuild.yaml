# ‚úÖ CONFIGURACI√ìN DE BUILD OPTIMIZADA
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'

# ‚úÖ VARIABLES DE SUSTITUCI√ìN
substitutions:
  _SERVICE_NAME: 'ava-app'
  _REGION: 'us-central1'
  _MEMORY: '1Gi'
  _CPU: '1'
  _TIMEOUT: '3600s'
  _MAX_INSTANCES: '10'
  _MIN_INSTANCES: '1'

steps:
  # ‚úÖ PASO 1: PREPARAR ENTORNO
  - name: 'python:3.11-slim'
    id: 'prepare'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üöÄ Preparando build de AVA..."
        python --version
        pip --version

  # ‚úÖ PASO 2: INSTALAR DEPENDENCIAS Y EJECUTAR TESTS
  - name: 'python:3.11-slim'
    id: 'test'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üß™ Instalando dependencias y ejecutando tests..."
        pip install --upgrade pip
        pip install -r requirements.txt
        python -m pytest tests/ || echo "‚ö†Ô∏è Tests no encontrados"

  # ‚úÖ PASO 3: CONSTRUIR IMAGEN DOCKER
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/${_SERVICE_NAME}:$COMMIT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/${_SERVICE_NAME}:latest'
      - '--build-arg'
      - 'BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")'
      - '--build-arg'
      - 'VCS_REF=$COMMIT_SHA'
      - '.'

  # ‚úÖ PASO 4: PUSH DE IMAGEN
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push'
    args:
      - 'push'
      - '--all-tags'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/${_SERVICE_NAME}'

  # ‚úÖ PASO 5: DESPLEGAR A CLOUD RUN
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--memory=${_MEMORY}'
      - '--cpu=${_CPU}'
      - '--timeout=${_TIMEOUT}'
      - '--port=8080'
      - '--max-instances=${_MAX_INSTANCES}'
      - '--min-instances=${_MIN_INSTANCES}'
      - '--set-env-vars=FLASK_ENV=production,FLASK_APP=app:app'
      - '--set-secrets=GROQ_API_KEY=groq-api-key:latest,SECRET_KEY=secret-key:latest'

  # ‚úÖ PASO 6: VERIFICAR DESPLIEGUE
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'verify'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîç Verificando despliegue..."
        SERVICE_URL=$(gcloud run services describe ${_SERVICE_NAME} --region=${_REGION} --format='value(status.url)')
        echo "üåê URL del servicio: $SERVICE_URL"
        
        # Verificar que el servicio responda
        curl -f "$SERVICE_URL/health" || exit 1
        echo "‚úÖ Servicio desplegado correctamente"

# ‚úÖ IM√ÅGENES A ALMACENAR
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/${_SERVICE_NAME}:$COMMIT_SHA'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/${_SERVICE_NAME}:latest'

# ‚úÖ TIMEOUT DEL BUILD
timeout: '1800s'